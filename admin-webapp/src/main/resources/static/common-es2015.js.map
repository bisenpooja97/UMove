{"version":3,"sources":["./src/app/fuel/fuel.service.ts","./src/app/types/vehicle-type.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAA2C;AACO;AACS;AAU3D,IAAa,WAAW,GAAxB,MAAa,WAAW;IAEtB,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QAC1C,YAAO,GAAG,wEAAW,CAAC,OAAO,GAAG,wEAAW,CAAC,WAAW,CAAC;IADV,CAAC;IAE/C,OAAO;QACL,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAO,IAAI,CAAC,OAAO,CAAC,CAAC;IACjD,CAAC;IAEM,UAAU,CAAC,IAAU;QAC1B,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAO,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;IACxD,CAAC;IAGD,aAAa,CAAC,IAAY;QACxB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,QAAQ,GAAG,IAAI,CAAC,CAAC;QAC5C,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAQ,IAAI,CAAC,OAAO,GAAG,QAAQ,GAAG,IAAI,CAAC,CAAC;IACpE,CAAC;IAED,UAAU,CAAC,IAAY,EAAE,IAAU;QACjC,OAAO,IAAI,CAAC,UAAU,CAAC,KAAK,CAAO,IAAI,CAAC,OAAO,GAAG,GAAG,GAAG,IAAI,EAAE,IAAI,CAAC,CAAC;IACtE,CAAC;CAEF;;YApBiC,+DAAU;;AAF/B,WAAW;IAHvB,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,WAAW,CAsBvB;AAtBuB;;;;;;;;;;;;;;;;;;;;ACZmB;AACO;AAIS;AAM3D,IAAa,kBAAkB,GAA/B,MAAa,kBAAkB;IAE7B,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QAC1C,YAAO,GAAG,wEAAW,CAAC,OAAO,GAAG,wEAAW,CAAC,WAAW,CAAC;IADV,CAAC;IAE/C,OAAO;QACL,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAO,IAAI,CAAC,OAAO,CAAC,CAAC;IACjD,CAAC;IACD,gBAAgB,CAAC,IAAY;QAC3B,OAAO,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAC;QAC3C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,kBAAkB,GAAG,IAAI,CAAC,CAAC;QACtD,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAQ,IAAI,CAAC,OAAO,GAAG,QAAQ,GAAG,IAAI,CAAC,CAAC;IACpE,CAAC;IAED,UAAU,CAAC,WAAgB;QACzB,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAO,IAAI,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;IAC/D,CAAC;IAGD,iBAAiB,CAAC,IAAY,EAAE,IAAiB;QAC/C,OAAO,IAAI,CAAC,UAAU,CAAC,KAAK,CAAc,IAAI,CAAC,OAAO,GAAG,GAAG,GAAG,IAAI,EAAE,IAAI,CAAC,CAAC;IAC7E,CAAC;CAGF;;YArBiC,+DAAU;;AAF/B,kBAAkB;IAH9B,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,kBAAkB,CAuB9B;AAvB8B","file":"common-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { Resp } from '../model/Fuel-response';\nimport { Observable } from 'rxjs';\n\nimport { Fuel } from '../model/Fuel';\nimport { Resp1 } from '../model/Fuel-single-response';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FuelService{\n\n  constructor(private httpClient: HttpClient) { }\n  baseUrl = environment.baseUrl + environment.fuelBaseApi;\n  getFuel(): Observable<Resp> {\n    return this.httpClient.get<Resp>(this.baseUrl);\n  }\n\n  public createFuel(fuel: Resp) {\n    return this.httpClient.post<Resp>(this.baseUrl, fuel);\n  }\n\n\n  getFuelByName(name: string): Observable<Resp1> {\n    console.log(this.baseUrl + '?name=' + name);\n    return this.httpClient.get<Resp1>(this.baseUrl + '?name=' + name);\n  }\n\n  updateFuel(name: string, fuel: Fuel) {\n    return this.httpClient.patch<Fuel>(this.baseUrl + '/' + name, fuel);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { VehicleType } from '../model/VehicleType';\nimport { Resp } from '../model/VehicleType-response';\nimport { environment } from 'src/environments/environment';\nimport { Resp1 } from '../model/VehicleType-single-response';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VehicleTypeService {\n\n  constructor(private httpClient: HttpClient) { }\n  baseUrl = environment.baseUrl + environment.typeBaseApi;\n  getType(): Observable<Resp> {\n    return this.httpClient.get<Resp>(this.baseUrl);\n  }\n  getVehicleByName(name: string): Observable<Resp1> {\n    console.log(\"get vehicles by name called\");\n    console.log(this.baseUrl + '?registrationNo=' + name);\n    return this.httpClient.get<Resp1>(this.baseUrl + '?name=' + name);\n  }\n\n  createType(VehicleType:Resp ) {\n    return this.httpClient.post<Resp>(this.baseUrl, VehicleType);\n  }\n\n\n  updateVehicleType(name: string, type: VehicleType) {\n    return this.httpClient.patch<VehicleType>(this.baseUrl + '/' + name, type);\n  }\n\n\n}\n"],"sourceRoot":"webpack:///"}