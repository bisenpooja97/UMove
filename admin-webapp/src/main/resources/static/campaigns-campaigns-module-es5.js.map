{"version":3,"sources":["./node_modules/ng2-search-filter/ng2-search-filter.es5.js","./node_modules/ngx-pagination/dist/ngx-pagination.js","./src/app/campaigns/add-campaign/add-campaign.component.html","./src/app/campaigns/campaign-card/campaign-card.component.html","./src/app/campaigns/campaigns-details/campaigns-details.component.html","./src/app/campaigns/campaigns.component.html","./src/app/campaigns/edit-campaign/edit-campaign.component.html","./src/app/campaigns/add-campaign/add-campaign.component.css","./src/app/campaigns/add-campaign/add-campaign.component.ts","./src/app/campaigns/campaign-card/campaign-card.component.css","./src/app/campaigns/campaign-card/campaign-card.component.ts","./src/app/campaigns/campaigns-details/campaigns-details.component.css","./src/app/campaigns/campaigns-details/campaigns-details.component.ts","./src/app/campaigns/campaigns-routing.module.ts","./src/app/campaigns/campaigns.component.css","./src/app/campaigns/campaigns.component.ts","./src/app/campaigns/campaigns.module.ts","./src/app/campaigns/edit-campaign/edit-campaign.component.css","./src/app/campaigns/edit-campaign/edit-campaign.component.ts","./src/app/campaigns/service/campaigns.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAA2D;AAC3D;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,gCAAgC,EAAE;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA,KAAK,OAAO,kDAAI;AAChB;AACA;AACA,aAAa,IAAI;AACjB,KAAK,OAAO,wDAAU,EAAE;AACxB;AACA;AACA;AACA;AACA,4CAA4C,WAAW;AACvD;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,KAAK,OAAO,sDAAQ;AACpB;AACA;AACA,aAAa,IAAI;AACjB;AACA;AACA;AACA;AACA,kDAAkD,WAAW;AAC7D;AACA;AACA;AAC8C;AAC9C;;;;;;;;;;;;;AChFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiK;AAClH;;AAE/C;AACA;AACA,0BAA0B,0DAAY;AACtC;AACA;AACA;AACA,yDAAyD,wBAAwB;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,sBAAsB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,0BAA0B,EAAE;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,8CAA8C,EAAE;AAC5G;AACA;AACA,QAAQ,0DAAI;AACZ;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,yvBAAyvB,iBAAiB,+BAA+B,yBAAyB,2FAA2F,iBAAiB,+BAA+B,yBAAyB,mGAAmG,kBAAkB,KAAK,mBAAmB,6XAA6X,yBAAyB,kCAAkC,kEAAkE,6IAA6I,4BAA4B,kCAAkC,kEAAkE,wVAAwV,aAAa,+BAA+B,yBAAyB,2FAA2F,aAAa,+BAA+B,yBAAyB;AACv7E,yCAAyC,mBAAmB,wBAAwB,EAAE,qDAAqD,mBAAmB,qBAAqB,EAAE,4BAA4B,kBAAkB,EAAE,wBAAwB,6BAA6B,gCAAgC,4BAA4B,8BAA8B,uBAAuB,EAAE,wBAAwB,4BAA4B,EAAE,kDAAkD,qBAAqB,sBAAsB,kCAAkC,uBAAuB,EAAE,kEAAkE,4BAA4B,EAAE,8BAA8B,kCAAkC,0BAA0B,qBAAqB,sBAAsB,EAAE,+BAA+B,kCAAkC,qBAAqB,sBAAsB,EAAE,wCAAwC,gCAAgC,EAAE,+CAA+C,sBAAsB,EAAE,4GAA4G,uBAAuB,0BAA0B,yBAAyB,EAAE,kGAAkG,sBAAsB,0BAA0B,wBAAwB,EAAE,kCAAkC,kCAAkC,eAAe,gBAAgB,qBAAqB,2BAA2B,EAAE,iCAAiC,kBAAkB,EAAE,wCAAwC,8CAA8C,4BAA4B,EAAE,uGAAuG,oBAAoB,EAAE,GAAG;;AAEn2D;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,0DAAY;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,QAAQ,2DAAK;AACb;AACA;AACA;AACA,QAAQ,2DAAK;AACb;AACA;AACA;AACA,QAAQ,2DAAK;AACb;AACA;AACA;AACA;AACA,QAAQ,2DAAK;AACb;AACA;AACA;AACA;AACA,QAAQ,2DAAK;AACb;AACA;AACA;AACA;AACA,QAAQ,2DAAK;AACb;AACA;AACA;AACA,QAAQ,2DAAK;AACb;AACA;AACA;AACA,QAAQ,2DAAK;AACb;AACA;AACA;AACA,QAAQ,2DAAK;AACb;AACA;AACA;AACA,QAAQ,2DAAK;AACb;AACA;AACA;AACA,QAAQ,4DAAM;AACd,oCAAoC,0DAAY;AAChD;AACA;AACA,QAAQ,+DAAS;AACjB;AACA;AACA;AACA,6BAA6B,qEAAuB;AACpD,2BAA2B,+DAAiB;AAC5C,SAAS;AACT;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,0DAAY;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,2DAAK;AACb;AACA;AACA;AACA,QAAQ,2DAAK;AACb;AACA;AACA;AACA,QAAQ,4DAAM;AACd,oCAAoC,0DAAY;AAChD;AACA;AACA,QAAQ,+DAAS;AACjB;AACA;AACA,SAAS;AACT;AACA,YAAY,+DAAiB;AAC7B;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,QAA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","file":"campaigns-campaigns-module-es5.js","sourcesContent":["import { Injectable, NgModule, Pipe } from '@angular/core';\nvar Ng2SearchPipe = (function () {\n    function Ng2SearchPipe() {\n    }\n    /**\n     * @param {?} items object from array\n     * @param {?} term term's search\n     * @return {?}\n     */\n    Ng2SearchPipe.prototype.transform = function (items, term) {\n        if (!term || !items)\n            return items;\n        return Ng2SearchPipe.filter(items, term);\n    };\n    /**\n     *\n     * @param {?} items List of items to filter\n     * @param {?} term  a string term to compare with every property of the list\n     *\n     * @return {?}\n     */\n    Ng2SearchPipe.filter = function (items, term) {\n        var /** @type {?} */ toCompare = term.toLowerCase();\n        /**\n         * @param {?} item\n         * @param {?} term\n         * @return {?}\n         */\n        function checkInside(item, term) {\n            for (var /** @type {?} */ property in item) {\n                if (item[property] === null || item[property] == undefined) {\n                    continue;\n                }\n                if (typeof item[property] === 'object') {\n                    if (checkInside(item[property], term)) {\n                        return true;\n                    }\n                }\n                if (item[property].toString().toLowerCase().includes(toCompare)) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        return items.filter(function (item) {\n            return checkInside(item, term);\n        });\n    };\n    return Ng2SearchPipe;\n}());\nNg2SearchPipe.decorators = [\n    { type: Pipe, args: [{\n                name: 'filter',\n                pure: false\n            },] },\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nNg2SearchPipe.ctorParameters = function () { return []; };\nvar Ng2SearchPipeModule = (function () {\n    function Ng2SearchPipeModule() {\n    }\n    return Ng2SearchPipeModule;\n}());\nNg2SearchPipeModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [Ng2SearchPipe],\n                exports: [Ng2SearchPipe]\n            },] },\n];\n/**\n * @nocollapse\n */\nNg2SearchPipeModule.ctorParameters = function () { return []; };\n/**\n * Generated bundle index. Do not edit.\n */\nexport { Ng2SearchPipeModule, Ng2SearchPipe };\n//# sourceMappingURL=ng2-search-filter.es5.js.map\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Directive, EventEmitter, Input, NgModule, Output, Pipe, ViewEncapsulation } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nvar PaginationService = /** @class */ (function () {\r\n    function PaginationService() {\r\n        this.change = new EventEmitter();\r\n        this.instances = {};\r\n        this.DEFAULT_ID = 'DEFAULT_PAGINATION_ID';\r\n    }\r\n    PaginationService.prototype.defaultId = function () { return this.DEFAULT_ID; };\r\n    PaginationService.prototype.register = function (instance) {\r\n        if (instance.id == null) {\r\n            instance.id = this.DEFAULT_ID;\r\n        }\r\n        if (!this.instances[instance.id]) {\r\n            this.instances[instance.id] = instance;\r\n            this.change.emit(instance.id);\r\n        }\r\n        else {\r\n            var changed = this.updateInstance(instance);\r\n            if (changed) {\r\n                this.change.emit(instance.id);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Check each property of the instance and update any that have changed. Return\r\n     * true if any changes were made, else return false.\r\n     */\r\n    PaginationService.prototype.updateInstance = function (instance) {\r\n        var changed = false;\r\n        for (var prop in this.instances[instance.id]) {\r\n            if (instance[prop] !== this.instances[instance.id][prop]) {\r\n                this.instances[instance.id][prop] = instance[prop];\r\n                changed = true;\r\n            }\r\n        }\r\n        return changed;\r\n    };\r\n    /**\r\n     * Returns the current page number.\r\n     */\r\n    PaginationService.prototype.getCurrentPage = function (id) {\r\n        if (this.instances[id]) {\r\n            return this.instances[id].currentPage;\r\n        }\r\n    };\r\n    /**\r\n     * Sets the current page number.\r\n     */\r\n    PaginationService.prototype.setCurrentPage = function (id, page) {\r\n        if (this.instances[id]) {\r\n            var instance = this.instances[id];\r\n            var maxPage = Math.ceil(instance.totalItems / instance.itemsPerPage);\r\n            if (page <= maxPage && 1 <= page) {\r\n                this.instances[id].currentPage = page;\r\n                this.change.emit(id);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Sets the value of instance.totalItems\r\n     */\r\n    PaginationService.prototype.setTotalItems = function (id, totalItems) {\r\n        if (this.instances[id] && 0 <= totalItems) {\r\n            this.instances[id].totalItems = totalItems;\r\n            this.change.emit(id);\r\n        }\r\n    };\r\n    /**\r\n     * Sets the value of instance.itemsPerPage.\r\n     */\r\n    PaginationService.prototype.setItemsPerPage = function (id, itemsPerPage) {\r\n        if (this.instances[id]) {\r\n            this.instances[id].itemsPerPage = itemsPerPage;\r\n            this.change.emit(id);\r\n        }\r\n    };\r\n    /**\r\n     * Returns a clone of the pagination instance object matching the id. If no\r\n     * id specified, returns the instance corresponding to the default id.\r\n     */\r\n    PaginationService.prototype.getInstance = function (id) {\r\n        if (id === void 0) { id = this.DEFAULT_ID; }\r\n        if (this.instances[id]) {\r\n            return this.clone(this.instances[id]);\r\n        }\r\n        return {};\r\n    };\r\n    /**\r\n     * Perform a shallow clone of an object.\r\n     */\r\n    PaginationService.prototype.clone = function (obj) {\r\n        var target = {};\r\n        for (var i in obj) {\r\n            if (obj.hasOwnProperty(i)) {\r\n                target[i] = obj[i];\r\n            }\r\n        }\r\n        return target;\r\n    };\r\n    return PaginationService;\r\n}());\n\nvar __decorate$1 = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (undefined && undefined.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nvar LARGE_NUMBER = Number.MAX_SAFE_INTEGER;\r\nvar PaginatePipe = /** @class */ (function () {\r\n    function PaginatePipe(service) {\r\n        this.service = service;\r\n        // store the values from the last time the pipe was invoked\r\n        this.state = {};\r\n    }\r\n    PaginatePipe.prototype.transform = function (collection, args) {\r\n        // When an observable is passed through the AsyncPipe, it will output\r\n        // `null` until the subscription resolves. In this case, we want to\r\n        // use the cached data from the `state` object to prevent the NgFor\r\n        // from flashing empty until the real values arrive.\r\n        if (!(collection instanceof Array)) {\r\n            var _id = args.id || this.service.defaultId();\r\n            if (this.state[_id]) {\r\n                return this.state[_id].slice;\r\n            }\r\n            else {\r\n                return collection;\r\n            }\r\n        }\r\n        var serverSideMode = args.totalItems && args.totalItems !== collection.length;\r\n        var instance = this.createInstance(collection, args);\r\n        var id = instance.id;\r\n        var start, end;\r\n        var perPage = instance.itemsPerPage;\r\n        this.service.register(instance);\r\n        if (!serverSideMode && collection instanceof Array) {\r\n            perPage = +perPage || LARGE_NUMBER;\r\n            start = (instance.currentPage - 1) * perPage;\r\n            end = start + perPage;\r\n            var isIdentical = this.stateIsIdentical(id, collection, start, end);\r\n            if (isIdentical) {\r\n                return this.state[id].slice;\r\n            }\r\n            else {\r\n                var slice = collection.slice(start, end);\r\n                this.saveState(id, collection, slice, start, end);\r\n                this.service.change.emit(id);\r\n                return slice;\r\n            }\r\n        }\r\n        // save the state for server-side collection to avoid null\r\n        // flash as new data loads.\r\n        this.saveState(id, collection, collection, start, end);\r\n        return collection;\r\n    };\r\n    /**\r\n     * Create an PaginationInstance object, using defaults for any optional properties not supplied.\r\n     */\r\n    PaginatePipe.prototype.createInstance = function (collection, config) {\r\n        this.checkConfig(config);\r\n        return {\r\n            id: config.id != null ? config.id : this.service.defaultId(),\r\n            itemsPerPage: +config.itemsPerPage || 0,\r\n            currentPage: +config.currentPage || 1,\r\n            totalItems: +config.totalItems || collection.length\r\n        };\r\n    };\r\n    /**\r\n     * Ensure the argument passed to the filter contains the required properties.\r\n     */\r\n    PaginatePipe.prototype.checkConfig = function (config) {\r\n        var required = ['itemsPerPage', 'currentPage'];\r\n        var missing = required.filter(function (prop) { return !(prop in config); });\r\n        if (0 < missing.length) {\r\n            throw new Error(\"PaginatePipe: Argument is missing the following required properties: \" + missing.join(', '));\r\n        }\r\n    };\r\n    /**\r\n     * To avoid returning a brand new array each time the pipe is run, we store the state of the sliced\r\n     * array for a given id. This means that the next time the pipe is run on this collection & id, we just\r\n     * need to check that the collection, start and end points are all identical, and if so, return the\r\n     * last sliced array.\r\n     */\r\n    PaginatePipe.prototype.saveState = function (id, collection, slice, start, end) {\r\n        this.state[id] = {\r\n            collection: collection,\r\n            size: collection.length,\r\n            slice: slice,\r\n            start: start,\r\n            end: end\r\n        };\r\n    };\r\n    /**\r\n     * For a given id, returns true if the collection, size, start and end values are identical.\r\n     */\r\n    PaginatePipe.prototype.stateIsIdentical = function (id, collection, start, end) {\r\n        var state = this.state[id];\r\n        if (!state) {\r\n            return false;\r\n        }\r\n        var isMetaDataIdentical = state.size === collection.length &&\r\n            state.start === start &&\r\n            state.end === end;\r\n        if (!isMetaDataIdentical) {\r\n            return false;\r\n        }\r\n        return state.slice.every(function (element, index) { return element === collection[start + index]; });\r\n    };\r\n    PaginatePipe = __decorate$1([\r\n        Pipe({\r\n            name: 'paginate',\r\n            pure: false\r\n        }),\r\n        __metadata(\"design:paramtypes\", [PaginationService])\r\n    ], PaginatePipe);\r\n    return PaginatePipe;\r\n}());\n\n/**\r\n * The default template and styles for the pagination links are borrowed directly\r\n * from Zurb Foundation 6: http://foundation.zurb.com/sites/docs/pagination.html\r\n */\r\nvar DEFAULT_TEMPLATE = \"\\n    <pagination-template  #p=\\\"paginationApi\\\"\\n                         [id]=\\\"id\\\"\\n                         [maxSize]=\\\"maxSize\\\"\\n                         (pageChange)=\\\"pageChange.emit($event)\\\">\\n    <ul class=\\\"ngx-pagination\\\" \\n        role=\\\"navigation\\\" \\n        [attr.aria-label]=\\\"screenReaderPaginationLabel\\\" \\n        [class.responsive]=\\\"responsive\\\"\\n        *ngIf=\\\"!(autoHide && p.pages.length <= 1)\\\">\\n\\n        <li class=\\\"pagination-previous\\\" [class.disabled]=\\\"p.isFirstPage()\\\" *ngIf=\\\"directionLinks\\\"> \\n            <a tabindex=\\\"0\\\" *ngIf=\\\"1 < p.getCurrent()\\\" (keyup.enter)=\\\"p.previous()\\\" (click)=\\\"p.previous()\\\" [attr.aria-label]=\\\"previousLabel + ' ' + screenReaderPageLabel\\\">\\n                {{ previousLabel }} <span class=\\\"show-for-sr\\\">{{ screenReaderPageLabel }}</span>\\n            </a>\\n            <span *ngIf=\\\"p.isFirstPage()\\\">\\n                {{ previousLabel }} <span class=\\\"show-for-sr\\\">{{ screenReaderPageLabel }}</span>\\n            </span>\\n        </li> \\n\\n        <li class=\\\"small-screen\\\">\\n            {{ p.getCurrent() }} / {{ p.getLastPage() }}\\n        </li>\\n\\n        <li [class.current]=\\\"p.getCurrent() === page.value\\\" \\n            [class.ellipsis]=\\\"page.label === '...'\\\"\\n            *ngFor=\\\"let page of p.pages\\\">\\n            <a tabindex=\\\"0\\\" (keyup.enter)=\\\"p.setCurrent(page.value)\\\" (click)=\\\"p.setCurrent(page.value)\\\" *ngIf=\\\"p.getCurrent() !== page.value\\\">\\n                <span class=\\\"show-for-sr\\\">{{ screenReaderPageLabel }} </span>\\n                <span>{{ (page.label === '...') ? page.label : (page.label | number:'') }}</span>\\n            </a>\\n            <ng-container *ngIf=\\\"p.getCurrent() === page.value\\\">\\n                <span class=\\\"show-for-sr\\\">{{ screenReaderCurrentLabel }} </span>\\n                <span>{{ (page.label === '...') ? page.label : (page.label | number:'') }}</span> \\n            </ng-container>\\n        </li>\\n\\n        <li class=\\\"pagination-next\\\" [class.disabled]=\\\"p.isLastPage()\\\" *ngIf=\\\"directionLinks\\\">\\n            <a tabindex=\\\"0\\\" *ngIf=\\\"!p.isLastPage()\\\" (keyup.enter)=\\\"p.next()\\\" (click)=\\\"p.next()\\\" [attr.aria-label]=\\\"nextLabel + ' ' + screenReaderPageLabel\\\">\\n                 {{ nextLabel }} <span class=\\\"show-for-sr\\\">{{ screenReaderPageLabel }}</span>\\n            </a>\\n            <span *ngIf=\\\"p.isLastPage()\\\">\\n                 {{ nextLabel }} <span class=\\\"show-for-sr\\\">{{ screenReaderPageLabel }}</span>\\n            </span>\\n        </li>\\n\\n    </ul>\\n    </pagination-template>\\n    \";\r\nvar DEFAULT_STYLES = \"\\n.ngx-pagination {\\n  margin-left: 0;\\n  margin-bottom: 1rem; }\\n  .ngx-pagination::before, .ngx-pagination::after {\\n    content: ' ';\\n    display: table; }\\n  .ngx-pagination::after {\\n    clear: both; }\\n  .ngx-pagination li {\\n    -moz-user-select: none;\\n    -webkit-user-select: none;\\n    -ms-user-select: none;\\n    margin-right: 0.0625rem;\\n    border-radius: 0; }\\n  .ngx-pagination li {\\n    display: inline-block; }\\n  .ngx-pagination a,\\n  .ngx-pagination button {\\n    color: #0a0a0a; \\n    display: block;\\n    padding: 0.1875rem 0.625rem;\\n    border-radius: 0; }\\n    .ngx-pagination a:hover,\\n    .ngx-pagination button:hover {\\n      background: #e6e6e6; }\\n  .ngx-pagination .current {\\n    padding: 0.1875rem 0.625rem;\\n    background: #2199e8;\\n    color: #fefefe;\\n    cursor: default; }\\n  .ngx-pagination .disabled {\\n    padding: 0.1875rem 0.625rem;\\n    color: #cacaca;\\n    cursor: default; } \\n    .ngx-pagination .disabled:hover {\\n      background: transparent; }\\n  .ngx-pagination a, .ngx-pagination button {\\n    cursor: pointer; }\\n\\n.ngx-pagination .pagination-previous a::before,\\n.ngx-pagination .pagination-previous.disabled::before { \\n  content: '\\u00AB';\\n  display: inline-block;\\n  margin-right: 0.5rem; }\\n\\n.ngx-pagination .pagination-next a::after,\\n.ngx-pagination .pagination-next.disabled::after {\\n  content: '\\u00BB';\\n  display: inline-block;\\n  margin-left: 0.5rem; }\\n\\n.ngx-pagination .show-for-sr {\\n  position: absolute !important;\\n  width: 1px;\\n  height: 1px;\\n  overflow: hidden;\\n  clip: rect(0, 0, 0, 0); }\\n.ngx-pagination .small-screen {\\n  display: none; }\\n@media screen and (max-width: 601px) {\\n  .ngx-pagination.responsive .small-screen {\\n    display: inline-block; } \\n  .ngx-pagination.responsive li:not(.small-screen):not(.pagination-previous):not(.pagination-next) {\\n    display: none; }\\n}\\n  \";\n\nvar __decorate$2 = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata$1 = (undefined && undefined.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nfunction coerceToBoolean(input) {\r\n    return !!input && input !== 'false';\r\n}\r\n/**\r\n * The default pagination controls component. Actually just a default implementation of a custom template.\r\n */\r\nvar PaginationControlsComponent = /** @class */ (function () {\r\n    function PaginationControlsComponent() {\r\n        this.maxSize = 7;\r\n        this.previousLabel = 'Previous';\r\n        this.nextLabel = 'Next';\r\n        this.screenReaderPaginationLabel = 'Pagination';\r\n        this.screenReaderPageLabel = 'page';\r\n        this.screenReaderCurrentLabel = \"You're on page\";\r\n        this.pageChange = new EventEmitter();\r\n        this._directionLinks = true;\r\n        this._autoHide = false;\r\n        this._responsive = false;\r\n    }\r\n    Object.defineProperty(PaginationControlsComponent.prototype, \"directionLinks\", {\r\n        get: function () {\r\n            return this._directionLinks;\r\n        },\r\n        set: function (value) {\r\n            this._directionLinks = coerceToBoolean(value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PaginationControlsComponent.prototype, \"autoHide\", {\r\n        get: function () {\r\n            return this._autoHide;\r\n        },\r\n        set: function (value) {\r\n            this._autoHide = coerceToBoolean(value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PaginationControlsComponent.prototype, \"responsive\", {\r\n        get: function () {\r\n            return this._responsive;\r\n        },\r\n        set: function (value) {\r\n            this._responsive = coerceToBoolean(value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    __decorate$2([\r\n        Input(),\r\n        __metadata$1(\"design:type\", String)\r\n    ], PaginationControlsComponent.prototype, \"id\", void 0);\r\n    __decorate$2([\r\n        Input(),\r\n        __metadata$1(\"design:type\", Number)\r\n    ], PaginationControlsComponent.prototype, \"maxSize\", void 0);\r\n    __decorate$2([\r\n        Input(),\r\n        __metadata$1(\"design:type\", Boolean),\r\n        __metadata$1(\"design:paramtypes\", [Boolean])\r\n    ], PaginationControlsComponent.prototype, \"directionLinks\", null);\r\n    __decorate$2([\r\n        Input(),\r\n        __metadata$1(\"design:type\", Boolean),\r\n        __metadata$1(\"design:paramtypes\", [Boolean])\r\n    ], PaginationControlsComponent.prototype, \"autoHide\", null);\r\n    __decorate$2([\r\n        Input(),\r\n        __metadata$1(\"design:type\", Boolean),\r\n        __metadata$1(\"design:paramtypes\", [Boolean])\r\n    ], PaginationControlsComponent.prototype, \"responsive\", null);\r\n    __decorate$2([\r\n        Input(),\r\n        __metadata$1(\"design:type\", String)\r\n    ], PaginationControlsComponent.prototype, \"previousLabel\", void 0);\r\n    __decorate$2([\r\n        Input(),\r\n        __metadata$1(\"design:type\", String)\r\n    ], PaginationControlsComponent.prototype, \"nextLabel\", void 0);\r\n    __decorate$2([\r\n        Input(),\r\n        __metadata$1(\"design:type\", String)\r\n    ], PaginationControlsComponent.prototype, \"screenReaderPaginationLabel\", void 0);\r\n    __decorate$2([\r\n        Input(),\r\n        __metadata$1(\"design:type\", String)\r\n    ], PaginationControlsComponent.prototype, \"screenReaderPageLabel\", void 0);\r\n    __decorate$2([\r\n        Input(),\r\n        __metadata$1(\"design:type\", String)\r\n    ], PaginationControlsComponent.prototype, \"screenReaderCurrentLabel\", void 0);\r\n    __decorate$2([\r\n        Output(),\r\n        __metadata$1(\"design:type\", EventEmitter)\r\n    ], PaginationControlsComponent.prototype, \"pageChange\", void 0);\r\n    PaginationControlsComponent = __decorate$2([\r\n        Component({\r\n            selector: 'pagination-controls',\r\n            template: DEFAULT_TEMPLATE,\r\n            styles: [DEFAULT_STYLES],\r\n            changeDetection: ChangeDetectionStrategy.OnPush,\r\n            encapsulation: ViewEncapsulation.None\r\n        })\r\n    ], PaginationControlsComponent);\r\n    return PaginationControlsComponent;\r\n}());\n\nvar __decorate$3 = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata$2 = (undefined && undefined.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\n/**\r\n * This directive is what powers all pagination controls components, including the default one.\r\n * It exposes an API which is hooked up to the PaginationService to keep the PaginatePipe in sync\r\n * with the pagination controls.\r\n */\r\nvar PaginationControlsDirective = /** @class */ (function () {\r\n    function PaginationControlsDirective(service, changeDetectorRef) {\r\n        var _this = this;\r\n        this.service = service;\r\n        this.changeDetectorRef = changeDetectorRef;\r\n        this.maxSize = 7;\r\n        this.pageChange = new EventEmitter();\r\n        this.pages = [];\r\n        this.changeSub = this.service.change\r\n            .subscribe(function (id) {\r\n            if (_this.id === id) {\r\n                _this.updatePageLinks();\r\n                _this.changeDetectorRef.markForCheck();\r\n                _this.changeDetectorRef.detectChanges();\r\n            }\r\n        });\r\n    }\r\n    PaginationControlsDirective.prototype.ngOnInit = function () {\r\n        if (this.id === undefined) {\r\n            this.id = this.service.defaultId();\r\n        }\r\n        this.updatePageLinks();\r\n    };\r\n    PaginationControlsDirective.prototype.ngOnChanges = function (changes) {\r\n        this.updatePageLinks();\r\n    };\r\n    PaginationControlsDirective.prototype.ngOnDestroy = function () {\r\n        this.changeSub.unsubscribe();\r\n    };\r\n    /**\r\n     * Go to the previous page\r\n     */\r\n    PaginationControlsDirective.prototype.previous = function () {\r\n        this.checkValidId();\r\n        this.setCurrent(this.getCurrent() - 1);\r\n    };\r\n    /**\r\n     * Go to the next page\r\n     */\r\n    PaginationControlsDirective.prototype.next = function () {\r\n        this.checkValidId();\r\n        this.setCurrent(this.getCurrent() + 1);\r\n    };\r\n    /**\r\n     * Returns true if current page is first page\r\n     */\r\n    PaginationControlsDirective.prototype.isFirstPage = function () {\r\n        return this.getCurrent() === 1;\r\n    };\r\n    /**\r\n     * Returns true if current page is last page\r\n     */\r\n    PaginationControlsDirective.prototype.isLastPage = function () {\r\n        return this.getLastPage() === this.getCurrent();\r\n    };\r\n    /**\r\n     * Set the current page number.\r\n     */\r\n    PaginationControlsDirective.prototype.setCurrent = function (page) {\r\n        this.pageChange.emit(page);\r\n    };\r\n    /**\r\n     * Get the current page number.\r\n     */\r\n    PaginationControlsDirective.prototype.getCurrent = function () {\r\n        return this.service.getCurrentPage(this.id);\r\n    };\r\n    /**\r\n     * Returns the last page number\r\n     */\r\n    PaginationControlsDirective.prototype.getLastPage = function () {\r\n        var inst = this.service.getInstance(this.id);\r\n        if (inst.totalItems < 1) {\r\n            // when there are 0 or fewer (an error case) items, there are no \"pages\" as such,\r\n            // but it makes sense to consider a single, empty page as the last page.\r\n            return 1;\r\n        }\r\n        return Math.ceil(inst.totalItems / inst.itemsPerPage);\r\n    };\r\n    PaginationControlsDirective.prototype.getTotalItems = function () {\r\n        return this.service.getInstance(this.id).totalItems;\r\n    };\r\n    PaginationControlsDirective.prototype.checkValidId = function () {\r\n        if (this.service.getInstance(this.id).id == null) {\r\n            console.warn(\"PaginationControlsDirective: the specified id \\\"\" + this.id + \"\\\" does not match any registered PaginationInstance\");\r\n        }\r\n    };\r\n    /**\r\n     * Updates the page links and checks that the current page is valid. Should run whenever the\r\n     * PaginationService.change stream emits a value matching the current ID, or when any of the\r\n     * input values changes.\r\n     */\r\n    PaginationControlsDirective.prototype.updatePageLinks = function () {\r\n        var _this = this;\r\n        var inst = this.service.getInstance(this.id);\r\n        var correctedCurrentPage = this.outOfBoundCorrection(inst);\r\n        if (correctedCurrentPage !== inst.currentPage) {\r\n            setTimeout(function () {\r\n                _this.setCurrent(correctedCurrentPage);\r\n                _this.pages = _this.createPageArray(inst.currentPage, inst.itemsPerPage, inst.totalItems, _this.maxSize);\r\n            });\r\n        }\r\n        else {\r\n            this.pages = this.createPageArray(inst.currentPage, inst.itemsPerPage, inst.totalItems, this.maxSize);\r\n        }\r\n    };\r\n    /**\r\n     * Checks that the instance.currentPage property is within bounds for the current page range.\r\n     * If not, return a correct value for currentPage, or the current value if OK.\r\n     */\r\n    PaginationControlsDirective.prototype.outOfBoundCorrection = function (instance) {\r\n        var totalPages = Math.ceil(instance.totalItems / instance.itemsPerPage);\r\n        if (totalPages < instance.currentPage && 0 < totalPages) {\r\n            return totalPages;\r\n        }\r\n        else if (instance.currentPage < 1) {\r\n            return 1;\r\n        }\r\n        return instance.currentPage;\r\n    };\r\n    /**\r\n     * Returns an array of Page objects to use in the pagination controls.\r\n     */\r\n    PaginationControlsDirective.prototype.createPageArray = function (currentPage, itemsPerPage, totalItems, paginationRange) {\r\n        // paginationRange could be a string if passed from attribute, so cast to number.\r\n        paginationRange = +paginationRange;\r\n        var pages = [];\r\n        var totalPages = Math.ceil(totalItems / itemsPerPage);\r\n        var halfWay = Math.ceil(paginationRange / 2);\r\n        var isStart = currentPage <= halfWay;\r\n        var isEnd = totalPages - halfWay < currentPage;\r\n        var isMiddle = !isStart && !isEnd;\r\n        var ellipsesNeeded = paginationRange < totalPages;\r\n        var i = 1;\r\n        while (i <= totalPages && i <= paginationRange) {\r\n            var label = void 0;\r\n            var pageNumber = this.calculatePageNumber(i, currentPage, paginationRange, totalPages);\r\n            var openingEllipsesNeeded = (i === 2 && (isMiddle || isEnd));\r\n            var closingEllipsesNeeded = (i === paginationRange - 1 && (isMiddle || isStart));\r\n            if (ellipsesNeeded && (openingEllipsesNeeded || closingEllipsesNeeded)) {\r\n                label = '...';\r\n            }\r\n            else {\r\n                label = pageNumber;\r\n            }\r\n            pages.push({\r\n                label: label,\r\n                value: pageNumber\r\n            });\r\n            i++;\r\n        }\r\n        return pages;\r\n    };\r\n    /**\r\n     * Given the position in the sequence of pagination links [i],\r\n     * figure out what page number corresponds to that position.\r\n     */\r\n    PaginationControlsDirective.prototype.calculatePageNumber = function (i, currentPage, paginationRange, totalPages) {\r\n        var halfWay = Math.ceil(paginationRange / 2);\r\n        if (i === paginationRange) {\r\n            return totalPages;\r\n        }\r\n        else if (i === 1) {\r\n            return i;\r\n        }\r\n        else if (paginationRange < totalPages) {\r\n            if (totalPages - halfWay < currentPage) {\r\n                return totalPages - paginationRange + i;\r\n            }\r\n            else if (halfWay < currentPage) {\r\n                return currentPage - halfWay + i;\r\n            }\r\n            else {\r\n                return i;\r\n            }\r\n        }\r\n        else {\r\n            return i;\r\n        }\r\n    };\r\n    __decorate$3([\r\n        Input(),\r\n        __metadata$2(\"design:type\", String)\r\n    ], PaginationControlsDirective.prototype, \"id\", void 0);\r\n    __decorate$3([\r\n        Input(),\r\n        __metadata$2(\"design:type\", Number)\r\n    ], PaginationControlsDirective.prototype, \"maxSize\", void 0);\r\n    __decorate$3([\r\n        Output(),\r\n        __metadata$2(\"design:type\", EventEmitter)\r\n    ], PaginationControlsDirective.prototype, \"pageChange\", void 0);\r\n    PaginationControlsDirective = __decorate$3([\r\n        Directive({\r\n            selector: 'pagination-template,[pagination-template]',\r\n            exportAs: 'paginationApi'\r\n        }),\r\n        __metadata$2(\"design:paramtypes\", [PaginationService,\r\n            ChangeDetectorRef])\r\n    ], PaginationControlsDirective);\r\n    return PaginationControlsDirective;\r\n}());\n\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar NgxPaginationModule = /** @class */ (function () {\r\n    function NgxPaginationModule() {\r\n    }\r\n    NgxPaginationModule = __decorate([\r\n        NgModule({\r\n            imports: [CommonModule],\r\n            declarations: [\r\n                PaginatePipe,\r\n                PaginationControlsComponent,\r\n                PaginationControlsDirective\r\n            ],\r\n            providers: [PaginationService],\r\n            exports: [PaginatePipe, PaginationControlsComponent, PaginationControlsDirective]\r\n        })\r\n    ], NgxPaginationModule);\r\n    return NgxPaginationModule;\r\n}());\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { DEFAULT_STYLES as ɵb, DEFAULT_TEMPLATE as ɵa, NgxPaginationModule, PaginationService, PaginationControlsComponent, PaginationControlsDirective, PaginatePipe };\n","module.exports = \"<mat-toolbar>\\n  <span class=\\\"fill-remaining-space\\\"></span>\\n  <button class=\\\"btn-dialog-close\\\" mat-stroked-button (click)=\\\"onClose()\\\" tabIndex=\\\"-1\\\">\\n    <mat-icon>clear</mat-icon>\\n  </button>\\n</mat-toolbar>\\n\\n<form fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" [formGroup]=\\\"campaignForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n  <h2>Create a new campaign</h2>\\n  <div fxFlex=50% fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayoutGap.lt-md=\\\"0px\\\" class=\\\"form\\\"\\n    fxLayoutAlign=\\\"center center\\\">\\n    <div fxLayout=\\\"column\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayoutGap.lt-md=\\\"0px\\\" class=\\\"col\\\">\\n      <mat-form-field appearance=\\\"outline\\\" fxFlex>\\n        <mat-label>Campaign name</mat-label>\\n        <input matInput #input placeholder=\\\"Campaign Name\\\" formControlName=\\\"name\\\" required>\\n      </mat-form-field>\\n      \\n      <mat-form-field appearance=\\\"outline\\\" fxFlex>\\n        <mat-label>Objective</mat-label>\\n        <input matInput #input placeholder=\\\"Enter objective\\\" formControlName=\\\"objective\\\" required>\\n      </mat-form-field>\\n\\n      <mat-form-field>\\n        <input matInput [matDatepicker]=\\\"picker1\\\" placeholder=\\\"Choose a start date\\\" formControlName=\\\"startDate\\\">\\n        <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #picker1></mat-datepicker>\\n      </mat-form-field>\\n\\n      <mat-form-field appearance=\\\"outline\\\" fxFlex>\\n        <mat-label>Upper Bound</mat-label>\\n        <input matInput #input placeholder=\\\"upper Bound\\\" formControlName=\\\"upperBound\\\" required>\\n      </mat-form-field>\\n    </div>\\n    <div fxLayout=\\\"column\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayoutGap.lt-md=\\\"0px\\\" class=\\\"col\\\">\\n    \\n      <mat-form-field appearance=\\\"outline\\\" fxFlex>\\n        <mat-label>Promo code</mat-label>\\n        <input matInput #input placeholder=\\\"Promo code\\\" formControlName=\\\"promocode\\\" required>\\n      </mat-form-field>\\n      <mat-form-field appearance=\\\"outline\\\" fxFlex>\\n        <mat-label>Discount Percent</mat-label>\\n        <input matInput #input placeholder=\\\"Discount Percent\\\" formControlName=\\\"discountPercent\\\" required>\\n      </mat-form-field>\\n      <mat-form-field>\\n        <input matInput [matDatepicker]=\\\"picker2\\\" placeholder=\\\"Choose an expired date\\\" formControlName=\\\"expiredDate\\\">\\n        <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #picker2></mat-datepicker>\\n      </mat-form-field>\\n      <mat-form-field appearance=\\\"outline\\\" fxFlex>\\n        <mat-label>Total Coupons</mat-label>\\n        <input matInput #input placeholder=\\\"Total Coupons\\\" formControlName=\\\"totalCoupons\\\" required>\\n      </mat-form-field>\\n    </div>\\n  </div>\\n  <div fxLayout=\\\"column\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayoutGap.lt-md=\\\"0px\\\">\\n    <button mat-raised-button class=\\\"btn\\\" [disabled]='!campaignForm.valid' color=\\\"primary\\\">\\n      Submit\\n    </button>\\n  </div>\\n</form>\\n\"","module.exports = \"<mat-card class=\\\"my-card\\\" fxFlex.sm=\\\"0 1 calc(50%-10px)\\\" fxFlex.md=\\\"0 1 calc(33%-10px)\\\" fxLayout=\\\"column\\\" fxLayoutGap=\\\"20px\\\" (click)=\\\"ok()\\\">\\n\\n        <mat-card-title fxLayoutAlign=\\\"end\\\" [ngStyle]=\\\"{'background-color':getColor(campaignStatus)}\\\" class=\\\"status\\\">{{campaignStatus}}</mat-card-title>\\n        \\n    <mat-card-title fxLayoutAlign=\\\"start\\\" class=\\\"name\\\" >{{name}}</mat-card-title>\\n    <mat-card-content fxLayoutAlign=\\\"start\\\" class=\\\"objective\\\">Objective:{{objective}}</mat-card-content>\\n     <mat-card-content fxLayoutAlign=\\\"start\\\">Promo Code:{{promocode}}</mat-card-content>\\n    <!-- <mat-card-content fxLayoutAlign=\\\"start\\\">Discount Percent:{{discountPercent}}</mat-card-content> -->\\n    <!-- <mat-card-content fxLayoutAlign=\\\"start\\\">Upper Bound:{{upperBound}}</mat-card-content> -->\\n    <mat-card-content fxLayoutAlign=\\\"start\\\">Total Coupons:{{totalCoupons}}</mat-card-content>\\n    <mat-card-content fxLayoutAlign=\\\"start\\\">Used Coupons:{{usedCoupons}}</mat-card-content>\\n  </mat-card>\\n  \\n\"","module.exports = \"<div fxLayout.sm=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" fxLayoutGap=\\\"10%\\\">\\n  <div fxLayout=\\\"column\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap.lt-md=\\\"0px\\\">\\n    <mat-form-field appearance=\\\"outline\\\" fxFlex class=\\\"status\\\">\\n      <mat-label>Campaign Status</mat-label>\\n      <mat-select [(ngModel)]=\\\"Status\\\" (ngModelChange)=\\\"onChange($event)\\\">\\n        <mat-option *ngFor=\\\"let c of CampaignStatus\\\" [value]=\\\"c.value\\\">\\n          {{c.viewValue}}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n  </div>\\n</div>\\n<div fxLayout=\\\"column\\\">\\n    <mat-card class=\\\"campaign\\\" fxFlex.sm=\\\"0 1 calc(50%-10px)\\\" fxFlex.md=\\\"0 1 calc(33%-10px)\\\" fxLayout=\\\"column\\\"\\n      fxLayoutGap=\\\"20px\\\">\\n      <button mat-button class=\\\"icon\\\" (click)=\\\"edit()\\\">\\n        <i class=\\\"material-icons\\\">\\n            edit\\n        </i>\\n    </button>\\n      <br><br><br>\\n      <div fxFlex=50% fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" fxLayoutGap=\\\"20%\\\" fxLayoutGap.lt-md=\\\"0px\\\" class=\\\"form\\\"\\n        fxLayoutAlign=\\\"center center\\\">\\n\\n        <div fxLayout=\\\"column\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"30px\\\" fxLayoutGap.lt-md=\\\"0px\\\" class=\\\"col\\\">\\n          <mat-card-title fxLayoutAlign=\\\"start\\\">Start Date: {{campaign?.startDate|date:\\\"dd LLLL yyyy\\\" }}</mat-card-title>\\n          <mat-card-title fxLayoutAlign=\\\"end\\\">Expired date: {{campaign?.expiredDate|date:\\\"dd LLLL yyyy\\\"}}</mat-card-title>\\n          <mat-card-title fxLayoutAlign=\\\"start\\\">Promo Code: {{campaign?.promocode}}</mat-card-title>\\n          <mat-card-title fxLayoutAlign=\\\"start\\\">Discount Percent: {{campaign?.discountPercent}}</mat-card-title>\\n          <mat-card-title fxLayoutAlign=\\\"start\\\">Upper Bound: {{campaign?.upperBound}}         \\n          </mat-card-title>\\n           <div class=\\\"campaignestartend\\\">\\n            <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"10px\\\">\\n            <button mat-raised-button color=\\\"primary\\\" (click)=\\\"start()\\\" class=\\\"start\\\">\\n                Start\\n            </button>\\n            <button mat-raised-button color=\\\"primary\\\" (click)=\\\"end()\\\" class=\\\"end\\\">\\n                    End\\n                </button>\\n           </div>\\n        </div>    \\n        </div>\\n      </div>\\n    </mat-card>\\n</div>\\n    \\n  \\n\"","module.exports = \"<h1 fxLayout=\\\"column\\\" fxLayout.gt-md=\\\"row\\\" fxLayoutGap.gt-md=\\\"15px\\\" class=\\\"header\\\">\\n  Campaigns\\n</h1>\\n<div fxLayout=\\\"row\\\" fxLayoutGap=\\\"20px\\\" class=\\\"search\\\" fxLayout.gt-xs=\\\"row\\\">\\n  <mat-form-field fxFlex=20%>\\n    <input matInput [(ngModel)]=\\\"term\\\" placeholder=\\\"Search\\\">\\n  </mat-form-field>\\n</div>\\n<div fxLayout.xs=\\\"column\\\" fxLayout.gt=\\\"row\\\" fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"10px\\\" class=\\\"card\\\">\\n  <app-campaign-card *ngFor=\\\"let campaign of campaigns | paginate: { itemsPerPage: 10, currentPage: p}| filter:term\\\"\\n    [campaign]=\\\"campaign\\\">\\n  </app-campaign-card>\\n   <pagination-controls (pageChange)=\\\"p = $event\\\"></pagination-controls>\\n</div>\\n<div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutAlign=\\\"end\\\" class=\\\"add-button\\\">\\n  <button mat-fab color=\\\"primary\\\" (click)=\\\"add()\\\">\\n      <i class=\\\"material-icons\\\">\\n          add\\n      </i>\\n  </button>\\n\\n\"","module.exports = \"<mat-toolbar>\\n        <span class=\\\"fill-remaining-space\\\"></span>\\n        <button class=\\\"btn-dialog-close\\\" mat-stroked-button (click)=\\\"onClose()\\\" tabIndex=\\\"-1\\\">\\n            <mat-icon>clear</mat-icon>\\n        </button>\\n    </mat-toolbar>\\n\\n    <form fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" [formGroup]=\\\"campaignForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n\\n            <div fxLayout=\\\"column\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayoutGap.lt-md=\\\"0px\\\" class=\\\"form\\\"\\n                fxLayoutAlign=\\\"center center\\\">\\n\\n                <mat-form-field appearance=\\\"outline\\\" fxFlex>\\n                    <mat-label class=\\\"font-style\\\">Promo Code</mat-label>\\n                    <input matInput maxlength=\\\"6\\\" #input placeholder=\\\"promo code\\\" formControlName=\\\"promocode\\\" required class=\\\"font-style\\\">\\n       \\n                </mat-form-field>\\n                     <button mat-raised-button class=\\\"btn font-style\\\" [disabled]='!campaignForm.valid' color=\\\"primary\\\">\\n                                Submit\\n                            </button>\\n                        </div>\\n                        \\n    </form>\\n\\n\\n\\n\"","module.exports = \"mat-toolbar {\\n  background-color: white;\\n}\\n\\n.controles-container{\\n  width: 100%;\\n  padding: 5%;    \\n}\\n\\n.fill-remaining-space {\\n  /* This fills the remaining space, by using flexbox. \\n     Every toolbar row uses a flexbox row layout. */\\n  flex: 1 1 auto;\\n}\\n\\n.controles-container > * {\\n  width: 100%;\\n  }\\n\\n.btn-dialog-close{\\n      width: 45px;\\n      min-width: 0px !important;\\n      height: 40px;\\n      padding: 0px !important;\\n    }\\n\\n.button {\\n      padding-bottom: 21.5px;\\n  }\\n\\n.btn {\\n      width: 16em; height: 60px;\\n    \\n     }\\n\\n.col {\\n      width: 80%;\\n    }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY2FtcGFpZ25zL2FkZC1jYW1wYWlnbi9hZGQtY2FtcGFpZ24uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLHVCQUF1QjtBQUN6Qjs7QUFFQTtFQUNFLFdBQVc7RUFDWCxXQUFXO0FBQ2I7O0FBRUE7RUFDRTttREFDaUQ7RUFDakQsY0FBYztBQUNoQjs7QUFFQTtFQUNFLFdBQVc7RUFDWDs7QUFHRjtNQUNNLFdBQVc7TUFDWCx5QkFBeUI7TUFDekIsWUFBWTtNQUNaLHVCQUF1QjtJQUN6Qjs7QUFFQTtNQUNFLHNCQUFzQjtFQUMxQjs7QUFFRjtNQUNNLFdBQVcsRUFBRSxZQUFZOztLQUUxQjs7QUFFTDtNQUNNLFVBQVU7SUFDWiIsImZpbGUiOiJzcmMvYXBwL2NhbXBhaWducy9hZGQtY2FtcGFpZ24vYWRkLWNhbXBhaWduLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtYXQtdG9vbGJhciB7XG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xufVxuXG4uY29udHJvbGVzLWNvbnRhaW5lcntcbiAgd2lkdGg6IDEwMCU7XG4gIHBhZGRpbmc6IDUlOyAgICBcbn1cblxuLmZpbGwtcmVtYWluaW5nLXNwYWNlIHtcbiAgLyogVGhpcyBmaWxscyB0aGUgcmVtYWluaW5nIHNwYWNlLCBieSB1c2luZyBmbGV4Ym94LiBcbiAgICAgRXZlcnkgdG9vbGJhciByb3cgdXNlcyBhIGZsZXhib3ggcm93IGxheW91dC4gKi9cbiAgZmxleDogMSAxIGF1dG87XG59XG5cbi5jb250cm9sZXMtY29udGFpbmVyID4gKiB7XG4gIHdpZHRoOiAxMDAlO1xuICB9XG5cblxuLmJ0bi1kaWFsb2ctY2xvc2V7XG4gICAgICB3aWR0aDogNDVweDtcbiAgICAgIG1pbi13aWR0aDogMHB4ICFpbXBvcnRhbnQ7XG4gICAgICBoZWlnaHQ6IDQwcHg7XG4gICAgICBwYWRkaW5nOiAwcHggIWltcG9ydGFudDtcbiAgICB9XG5cbiAgICAuYnV0dG9uIHtcbiAgICAgIHBhZGRpbmctYm90dG9tOiAyMS41cHg7XG4gIH1cbiAgXG4uYnRuIHtcbiAgICAgIHdpZHRoOiAxNmVtOyBoZWlnaHQ6IDYwcHg7XG4gICAgXG4gICAgIH1cbiAgXG4uY29sIHtcbiAgICAgIHdpZHRoOiA4MCU7XG4gICAgfVxuIl19 */\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { CampaignsService } from '../service/campaigns.service';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-add-campaign',\n  templateUrl: './add-campaign.component.html',\n  styleUrls: ['./add-campaign.component.css']\n})\nexport class AddCampaignComponent implements OnInit {\n  form: FormGroup;\n  name: string;\n  objective: string;\n  startDate: Date;\n  endDate: Date;\n  expiredDate:Date;\n  promocode: string;\n  discountPercent: number;\n  upperBound: number;\n  totalCoupons: number;\n  usedCoupons: number;\n  campaignStatus:string;\n\n  constructor(private campaignService: CampaignsService, \n    private fb: FormBuilder,\n              private dialogRef: MatDialogRef<AddCampaignComponent>,\n              @Inject(MAT_DIALOG_DATA) data\n) { }\n\ncampaignForm = this.fb.group({\n  name: ['', []],\n  objective: ['', []],\n  startDate: ['', []],\n  endDate: ['', []],\n  expiredDate:['',[]],\n  promocode: ['', [Validators.pattern('[A-Z0-9]+')]],\n  discountPercent: ['', [Validators.pattern('[0-9]+')]],\n  upperBound: ['', [Validators.pattern('[0-9]+')]],\n  totalCoupons: ['', [Validators.pattern('[0-9]+')]],\n  usedCoupons: ['', [Validators.pattern('[0-9]+')]],\n  campaignStatus: ['Created',[]],\n});\n\nonClose() {\n  this.campaignForm.reset();\n  this.dialogRef.close();\n}\n\n\n  ngOnInit() {\n\n  }\n\n  onSubmit() {\n    console.log(\"form value\" , this.campaignForm.value);\n    this.dialogRef.close(this.campaignForm.value);\n\n}\n\n}\n","module.exports = \".my-card {\\n    margin-bottom: 40px;\\n    height: 300px;\\n    cursor: pointer;\\n    \\n}\\n\\n.my-card:hover {\\n    transform: scale(1.1);\\n}\\n\\n.name {\\n    padding-top: 10%;\\n}\\n\\n.status {\\n    font-weight: bold;\\n    font-size: 1em;\\n    color: white;\\n}\\n\\n.campaigneditdelete\\n{\\n    flex-direction: row;\\n    align-items: center;\\n\\n}\\n\\n\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY2FtcGFpZ25zL2NhbXBhaWduLWNhcmQvY2FtcGFpZ24tY2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksbUJBQW1CO0lBQ25CLGFBQWE7SUFDYixlQUFlOztBQUVuQjs7QUFFQTtJQUdJLHFCQUFxQjtBQUN6Qjs7QUFFQTtJQUNJLGdCQUFnQjtBQUNwQjs7QUFFQTtJQUNJLGlCQUFpQjtJQUNqQixjQUFjO0lBQ2QsWUFBWTtBQUNoQjs7QUFFQTs7SUFFSSxtQkFBbUI7SUFDbkIsbUJBQW1COztBQUV2QiIsImZpbGUiOiJzcmMvYXBwL2NhbXBhaWducy9jYW1wYWlnbi1jYXJkL2NhbXBhaWduLWNhcmQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5teS1jYXJkIHtcbiAgICBtYXJnaW4tYm90dG9tOiA0MHB4O1xuICAgIGhlaWdodDogMzAwcHg7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIFxufVxuXG4ubXktY2FyZDpob3ZlciB7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlKDEuMSk7XG4gICAgLW1zLXRyYW5zZm9ybTogc2NhbGUoMS4xKTtcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDEuMSk7XG59XG5cbi5uYW1lIHtcbiAgICBwYWRkaW5nLXRvcDogMTAlO1xufVxuXG4uc3RhdHVzIHtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICBmb250LXNpemU6IDFlbTtcbiAgICBjb2xvcjogd2hpdGU7XG59XG5cbi5jYW1wYWlnbmVkaXRkZWxldGVcbntcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG5cbn1cblxuXG4iXX0= */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MatDialogConfig } from '@angular/material';\n\n@Component({\n  selector: 'app-campaign-card',\n  templateUrl: './campaign-card.component.html',\n  styleUrls: ['./campaign-card.component.css']\n})\nexport class CampaignCardComponent implements OnInit {\n  @Input() campaign;\n  id: string;\n  name: string;\n  objective: string;\n  startDate: Date;\n  endDate: Date;\n  promocode: string;\n  discountPercent: number;\n  upperBound: number;\n  totalCoupons: number;\n  usedCoupons: number;\n  campaignStatus: string;\n  constructor(private router: Router) { }\n\n  ngOnInit() {\n    console.log('Campaign data is:', this.campaign);\n    this.id=this.campaign.id;\n    this.name = this.campaign.name;\n    this.objective = this.campaign.objective;\n    this.startDate = this.campaign.startDate;\n    this.endDate = this.campaign.endDate;\n    this.promocode = this.campaign.promocode;\n    this.discountPercent = this.campaign.discountPercent;\n    this.upperBound = this.campaign.upperBound;\n    this.totalCoupons = this.campaign.totalCoupons;\n    this.usedCoupons = this.campaign.usedCoupons;\n    this.campaignStatus = this.campaign.campaignStatus;\n  }\n\n  ok() {\n    console.log(this.id);\n    this.router.navigate(['/campaigns/details',this.id]);\n    \n  }\n\n  getColor(campaignStatus) {\n    switch (campaignStatus) {\n    case 'Created':\n    return '#1B5E20';\n    case 'Running':\n    return '#FFC400';\n    case 'Ended':\n    return '#F44336';\n}\n}\n\n\n}\n","module.exports = \".campaign {\\n    margin-bottom: 40px;\\n    margin-left: 450px;\\n     height: 400px; \\n    width: 55%;\\n    margin-top: 50px;\\n    \\n}\\n\\n.campaignstartend\\n{\\n    margin-left: 100px;\\n}\\n\\n.status {\\n    margin-top: 10px;\\n    padding-left: 1200px;\\n}\\n\\n@media only screen and (max-width: 600px) {\\n    .campaign {\\n        margin-left: 30px;\\n        height: 300px;\\n        width: 85%;\\n    }\\n\\n    .icon{\\n        margin-left: 80%;\\n        background-color: wheat;\\n    }\\n\\n\\n    mat-card-title {\\n        font-size: 1.4em;\\n    }\\n\\n    .status {\\n        margin-top: 20px;\\n        padding-right: 60x;\\n        padding-left: 0px;\\n    }\\n}\\n\\n.icon{\\n    margin-left: 80%;\\n    background-color: transparent;\\n}\\n\\n.doc {\\n    margin-top: 70px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY2FtcGFpZ25zL2NhbXBhaWducy1kZXRhaWxzL2NhbXBhaWducy1kZXRhaWxzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxtQkFBbUI7SUFDbkIsa0JBQWtCO0tBQ2pCLGFBQWE7SUFDZCxVQUFVO0lBQ1YsZ0JBQWdCOztBQUVwQjs7QUFFQTs7SUFFSSxrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxnQkFBZ0I7SUFDaEIsb0JBQW9CO0FBQ3hCOztBQUVBO0lBQ0k7UUFDSSxpQkFBaUI7UUFDakIsYUFBYTtRQUNiLFVBQVU7SUFDZDs7SUFFQTtRQUNJLGdCQUFnQjtRQUNoQix1QkFBdUI7SUFDM0I7OztJQUdBO1FBQ0ksZ0JBQWdCO0lBQ3BCOztJQUVBO1FBQ0ksZ0JBQWdCO1FBQ2hCLGtCQUFrQjtRQUNsQixpQkFBaUI7SUFDckI7QUFDSjs7QUFFQTtJQUNJLGdCQUFnQjtJQUNoQiw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxnQkFBZ0I7QUFDcEIiLCJmaWxlIjoic3JjL2FwcC9jYW1wYWlnbnMvY2FtcGFpZ25zLWRldGFpbHMvY2FtcGFpZ25zLWRldGFpbHMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jYW1wYWlnbiB7XG4gICAgbWFyZ2luLWJvdHRvbTogNDBweDtcbiAgICBtYXJnaW4tbGVmdDogNDUwcHg7XG4gICAgIGhlaWdodDogNDAwcHg7IFxuICAgIHdpZHRoOiA1NSU7XG4gICAgbWFyZ2luLXRvcDogNTBweDtcbiAgICBcbn1cblxuLmNhbXBhaWduc3RhcnRlbmRcbntcbiAgICBtYXJnaW4tbGVmdDogMTAwcHg7XG59XG5cbi5zdGF0dXMge1xuICAgIG1hcmdpbi10b3A6IDEwcHg7XG4gICAgcGFkZGluZy1sZWZ0OiAxMjAwcHg7XG59XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNjAwcHgpIHtcbiAgICAuY2FtcGFpZ24ge1xuICAgICAgICBtYXJnaW4tbGVmdDogMzBweDtcbiAgICAgICAgaGVpZ2h0OiAzMDBweDtcbiAgICAgICAgd2lkdGg6IDg1JTtcbiAgICB9XG5cbiAgICAuaWNvbntcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDgwJTtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogd2hlYXQ7XG4gICAgfVxuXG5cbiAgICBtYXQtY2FyZC10aXRsZSB7XG4gICAgICAgIGZvbnQtc2l6ZTogMS40ZW07XG4gICAgfVxuXG4gICAgLnN0YXR1cyB7XG4gICAgICAgIG1hcmdpbi10b3A6IDIwcHg7XG4gICAgICAgIHBhZGRpbmctcmlnaHQ6IDYweDtcbiAgICAgICAgcGFkZGluZy1sZWZ0OiAwcHg7XG4gICAgfVxufVxuXG4uaWNvbntcbiAgICBtYXJnaW4tbGVmdDogODAlO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xufVxuXG4uZG9jIHtcbiAgICBtYXJnaW4tdG9wOiA3MHB4O1xufVxuIl19 */\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { CampaignsService } from '../service/campaigns.service';\nimport { Campaign } from '../model/campaign';\nimport { EditCampaignComponent } from '../edit-campaign/edit-campaign.component';\nimport { MatDialogConfig, MatDialog } from '@angular/material';\n\nexport interface Status {\n  value: string;\n  viewValue: string;\n}\n\n@Component({\n  selector: 'app-campaigns-details',\n  templateUrl: './campaigns-details.component.html',\n  styleUrls: ['./campaigns-details.component.css']\n})\n\nexport class CampaignsDetailsComponent implements OnInit {\n\n  campaign: Campaign;\n  id: string;\n  name: string;\n  objective: string;\n  startDate: Date;\n  endDate: Date;\n  expiredDate: Date;\n  promocode: string;\n  discountPercent: number;\n  upperBound: number;\n  totalCoupons: number;\n  usedCoupons: number;\n  campaignStatus: string;\n\n  CampaignStatus: Status[] = [\n    { value: 'CREATED', viewValue: 'CREATED' },\n    { value: 'RUNNING', viewValue: 'RUNNING' },\n    { value: 'ENDED', viewValue: 'ENDED' },\n  ];\n  \n  constructor(private router: Router, private campaignService: CampaignsService,\n              private activatedRoute: ActivatedRoute, private route: ActivatedRoute,\n              private matDialog: MatDialog) { }\n\n\n  ngOnInit() {\n    this.id = this.route.snapshot.paramMap.get('id');\n    console.log('ParamMap id', this.id);\n    this.campaignService.getCampaignsById(this.route.snapshot.paramMap.get('id')).subscribe(res => {\n      this.campaign= res.data;\n      console.log('Response hello', typeof(res.data), res.data);\n  })\n  }\n\n  edit()\n  {\n       const dialogConfig = new MatDialogConfig();\n       dialogConfig.disableClose = true;\n       dialogConfig.autoFocus = true;\n       dialogConfig.width = '40%';\n       dialogConfig.data = {\n        promocode : this.campaign,\n      };\n\n  const dRef = this.matDialog.open(EditCampaignComponent, dialogConfig);\n  dRef.afterClosed().subscribe(result => {\n    if (result !== undefined) {\n    this.campaignService.updateCampaignById(this.id,this.campaign).subscribe(\n      response => { \n\n       },\n    );\n  }\n});   \n  }\n\n  // start()\n  // {\n  //    console.log(Object.values(this.campaign));\n  //   Object.values(this.campaign)[13] = Object(this.campaign);\n  //   console.log(Object.values(this.campaign)[13], this.campaign);\n  //   this.campaignService.updateCampaignById(this.id,this.campaign).subscribe(\n  //     response => {\n  //                  console.log('Call Success');\n  //                  })\n  // }\n\n  onChange(newValue) {\n    console.log('Campaign ', this.campaign);\n     console.log(Object.values(this.campaign),Object.values(this.campaign));\n     this.campaign.campaignStatus = newValue;\n     console.log(this.campaign,'campaign ka status change hona chahiye');\n    // console.log(this.campaign.campaignStatus, this.campaign);\n    console.log('Id ',this.id);\n    this.campaignService.updateCampaignById(this.id, this.campaign).subscribe(\n      response => {\n                  console.log('response ',response);\n                   console.log('Call Success');\n                   console.log('Campaign ', this.campaign);\n                    // this.notificationService.success('Campaign updated successfully!!');\n       //},\n      // error => this.notificationService.warn(error),\n    // );\n});\n}\n\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CampaignsComponent } from './campaigns.component';\nimport { CampaignsDetailsComponent } from './campaigns-details/campaigns-details.component';\n\nconst routes: Routes = [{ path: '', component: CampaignsComponent },\n{path: 'details/:id', component: CampaignsDetailsComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\n\nexport class CampaignsRoutingModule { }\n","module.exports = \".header {\\n    margin-left: 240px;\\n}\\n\\napp-campaign-card {\\n    \\n    width: 25%;\\n    margin-left: 50px;\\n    \\n    \\n}\\n\\n.card {\\n    margin-left: 18%;\\n}\\n\\n.search {\\n    margin-left: 240px;\\n    margin-bottom: 50px;\\n}\\n\\n@media only screen and (max-width: 600px) {\\n    .card {\\n        margin-left: 10%;\\n    }\\n\\n    app-campaign-card {\\n        width: 75%;\\n    }\\n    \\n    .search {\\n        margin-left: 60px;\\n        margin-bottom: 50px;\\n    }\\n\\n    .header {\\n        margin-left: 50px;\\n    }\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY2FtcGFpZ25zL2NhbXBhaWducy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksa0JBQWtCO0FBQ3RCOztBQUVBOztJQUVJLFVBQVU7SUFDVixpQkFBaUI7OztBQUdyQjs7QUFDQTtJQUNJLGdCQUFnQjtBQUNwQjs7QUFFQTtJQUNJLGtCQUFrQjtJQUNsQixtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSTtRQUNJLGdCQUFnQjtJQUNwQjs7SUFFQTtRQUNJLFVBQVU7SUFDZDs7SUFFQTtRQUNJLGlCQUFpQjtRQUNqQixtQkFBbUI7SUFDdkI7O0lBRUE7UUFDSSxpQkFBaUI7SUFDckI7QUFDSiIsImZpbGUiOiJzcmMvYXBwL2NhbXBhaWducy9jYW1wYWlnbnMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5oZWFkZXIge1xuICAgIG1hcmdpbi1sZWZ0OiAyNDBweDtcbn1cblxuYXBwLWNhbXBhaWduLWNhcmQge1xuICAgIFxuICAgIHdpZHRoOiAyNSU7XG4gICAgbWFyZ2luLWxlZnQ6IDUwcHg7XG4gICAgXG4gICAgXG59XG4uY2FyZCB7XG4gICAgbWFyZ2luLWxlZnQ6IDE4JTtcbn1cblxuLnNlYXJjaCB7XG4gICAgbWFyZ2luLWxlZnQ6IDI0MHB4O1xuICAgIG1hcmdpbi1ib3R0b206IDUwcHg7XG59XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNjAwcHgpIHtcbiAgICAuY2FyZCB7XG4gICAgICAgIG1hcmdpbi1sZWZ0OiAxMCU7XG4gICAgfVxuXG4gICAgYXBwLWNhbXBhaWduLWNhcmQge1xuICAgICAgICB3aWR0aDogNzUlO1xuICAgIH1cbiAgICBcbiAgICAuc2VhcmNoIHtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDYwcHg7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDUwcHg7XG4gICAgfVxuXG4gICAgLmhlYWRlciB7XG4gICAgICAgIG1hcmdpbi1sZWZ0OiA1MHB4O1xuICAgIH1cbn1cbiJdfQ== */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { CampaignsService } from './service/campaigns.service';\nimport { MatPaginator, MatDialog, MatTableDataSource, MatDialogConfig } from '@angular/material';\nimport { AddCampaignComponent } from './add-campaign/add-campaign.component';\nimport { Campaign } from './model/campaign';\n\n\n\n@Component({\n  selector: 'app-campaigns',\n  templateUrl: './campaigns.component.html',\n  styleUrls: ['./campaigns.component.css']\n})\n\nexport class CampaignsComponent implements OnInit {\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  campaigns: Campaign;\n\n\n  p = 1;\n  dataSource = new MatTableDataSource();\n\n\n  constructor(private campaignservice: CampaignsService, private matDialog: MatDialog) { }\n\n  ngOnInit() {\n    this.campaignservice.getCampaigns().subscribe(res => { this.campaigns = res.data;\n                                                           console.log(res, 'parent');\n  });\n\n}\n\nadd() {\n  const dialogConfig = new MatDialogConfig();\n  dialogConfig.disableClose = true;\n  dialogConfig.autoFocus = true;\n  dialogConfig.width = '45%';\n  const dRef = this.matDialog.open(AddCampaignComponent, dialogConfig);\n\n  dRef.afterClosed().subscribe(result => {\n      if (result !== undefined) {\n      this.campaignservice.addCampaign(result)\n          .subscribe(\n            response => {\n              // this.notificationService.success(' Campaign Added successfully');\n              this.getCampaignsInfo();\n            }\n            \n            ); }\n\n     });\n}\n  getCampaignsInfo() {\n    return this.campaignservice.getCampaigns().subscribe(res => {\n      this.campaigns = res.data;\n  });\n}}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CampaignsRoutingModule } from './campaigns-routing.module';\nimport { CampaignsComponent } from './campaigns.component';\nimport { CampaignCardComponent } from './campaign-card/campaign-card.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatFormFieldModule, MatInputModule, MatCardModule, MatIconModule, MatButtonModule,\n  MatPaginatorModule, MatDialogModule, MatSelectModule, MatOptionModule, MatToolbarModule, MatDatepickerModule } from '@angular/material';\nimport { HttpClientModule } from '@angular/common/http';\nimport {NgxPaginationModule} from 'ngx-pagination';\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AddCampaignComponent } from './add-campaign/add-campaign.component';\nimport { EditCampaignComponent } from './edit-campaign/edit-campaign.component';\nimport { CampaignsDetailsComponent } from './campaigns-details/campaigns-details.component';\n\n\n@NgModule({\n  declarations: [CampaignsComponent, CampaignCardComponent, AddCampaignComponent, EditCampaignComponent, CampaignsDetailsComponent],\n  imports: [\n    CommonModule,\n    CampaignsRoutingModule,\n    FlexLayoutModule,\n    MatFormFieldModule,\n    MatInputModule,\n     MatCardModule,\n     HttpClientModule,\n     MatIconModule,\n     MatButtonModule,\n     NgxPaginationModule,\n     Ng2SearchPipeModule,\n     MatPaginatorModule,\n     MatDialogModule,\n     MatSelectModule,\n     MatOptionModule,\n     FormsModule,\n     ReactiveFormsModule,\n     MatToolbarModule,\n     MatDatepickerModule,\n  ],\n  entryComponents: [AddCampaignComponent,EditCampaignComponent],\n})\nexport class CampaignsModule { }\n","module.exports = \".fill-remaining-space {\\n    /* This fills the remaining space, by using flexbox.\\n       Every toolbar row uses a flexbox row layout. */\\n    flex: 1 1 auto;\\n  }\\n\\nmat-toolbar {\\n    background-color: white;\\n}\\n\\n.btn {\\n  width: 16em; height: 60px;\\n }\\n\\n.btn-dialog-close{\\n    width: 45px;\\n    min-width: 0px !important;\\n    height: 40px;\\n    padding: 0px !important;\\n  }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY2FtcGFpZ25zL2VkaXQtY2FtcGFpZ24vZWRpdC1jYW1wYWlnbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0k7cURBQ2lEO0lBQ2pELGNBQWM7RUFDaEI7O0FBRUY7SUFDSSx1QkFBdUI7QUFDM0I7O0FBRUE7RUFDRSxXQUFXLEVBQUUsWUFBWTtDQUMxQjs7QUFFRDtJQUNJLFdBQVc7SUFDWCx5QkFBeUI7SUFDekIsWUFBWTtJQUNaLHVCQUF1QjtFQUN6QiIsImZpbGUiOiJzcmMvYXBwL2NhbXBhaWducy9lZGl0LWNhbXBhaWduL2VkaXQtY2FtcGFpZ24uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5maWxsLXJlbWFpbmluZy1zcGFjZSB7XG4gICAgLyogVGhpcyBmaWxscyB0aGUgcmVtYWluaW5nIHNwYWNlLCBieSB1c2luZyBmbGV4Ym94LlxuICAgICAgIEV2ZXJ5IHRvb2xiYXIgcm93IHVzZXMgYSBmbGV4Ym94IHJvdyBsYXlvdXQuICovXG4gICAgZmxleDogMSAxIGF1dG87XG4gIH1cblxubWF0LXRvb2xiYXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xufVxuXG4uYnRuIHtcbiAgd2lkdGg6IDE2ZW07IGhlaWdodDogNjBweDtcbiB9XG5cbi5idG4tZGlhbG9nLWNsb3Nle1xuICAgIHdpZHRoOiA0NXB4O1xuICAgIG1pbi13aWR0aDogMHB4ICFpbXBvcnRhbnQ7XG4gICAgaGVpZ2h0OiA0MHB4O1xuICAgIHBhZGRpbmc6IDBweCAhaW1wb3J0YW50O1xuICB9XG4iXX0= */\"","import { Component, OnInit, Inject, Input } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CampaignsService } from '../service/campaigns.service';\n\n@Component({\n  selector: 'app-edit-campaign',\n  templateUrl: './edit-campaign.component.html',\n  styleUrls: ['./edit-campaign.component.css']\n})\n\nexport class EditCampaignComponent implements OnInit {\n  form: FormGroup;\n  id: string;\n  name: string;\n  objective: string;\n  startDate: Date;\n  endDate: Date;\n  expiredDate: Date;\n  promocode: string;\n  discountPercent: number;\n  upperBound: number;\n  totalCoupons: number;\n  usedCoupons: number;\n  CampaignStatus: string;\n\n  \n  constructor(public dialogRef: MatDialogRef<EditCampaignComponent>,\n    private fb: FormBuilder, private route: ActivatedRoute,\n    private router: Router, private campaignService: CampaignsService,\n    @Inject(MAT_DIALOG_DATA) data\n) { }\n\ncampaignForm = this.fb.group({\n  \npromocode: ['', [Validators.pattern('^[A-Z0-9]*$')]]\n  \n});\n\n\n  ngOnInit() {\n  }\n\n  onClose() {\n     this.campaignForm.reset();\n    this.dialogRef.close();\n  }\n\n  onSubmit() {\n    console.log(this.campaignForm.value);\n    this.dialogRef.close(this.campaignForm.value);\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { Observable } from 'rxjs';\nimport { Resp } from '../model/campaign-response';\nimport { Campaign } from '../model/campaign';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class CampaignsService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  baseUrl = environment.baseUrl + environment.campaignBaseApi;\n\n  getCampaigns(): Observable<Resp> {\n    return this.httpClient.get<Resp>(this.baseUrl);\n  }\n\n  getCampaignsById(id: string){\n    return this.httpClient.get<Resp>(this.baseUrl + '/' + id)\n  }\n\n  public addCampaign(campaign: Resp) {\n    return this.httpClient.post<Resp>(this.baseUrl + '/addcampaign', campaign);\n  }\n\n  public updateCampaignById(id: string, campaign: Campaign) {\n    console.log(JSON.stringify(campaign),'campaign service');\n    return this.httpClient.patch<Campaign>(this.baseUrl + '/' + id, campaign);\n  }\n\n public deleteCampaign(id: string) {\n  return this.httpClient.delete<Resp>(this.baseUrl + '/' + id);\n}\n\n}\n"],"sourceRoot":"webpack:///"}